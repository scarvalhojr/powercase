/*
	A basic extension of the java.awt.Frame class
 */

import java.awt.*;

public class New extends Frame
{
	public New()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(545,444);
		setFont(new Font("Dialog", Font.BOLD, 12));
		setBackground(new Color(12632256));
		textField1 = new java.awt.TextField();
		textField1.setBounds(12,48,533,29);
		add(textField1);
		file = new java.awt.Label("Arquivo de Projeto");
		file.setBounds(12,24,132,20);
		add(file);
		abreviado = new java.awt.Label("Nome Abreviado do Projeto");
		abreviado.setBounds(12,84,191,23);
		add(abreviado);
		textField2 = new java.awt.TextField();
		textField2.setBounds(12,108,533,29);
		add(textField2);
		textField3 = new java.awt.TextField();
		textField3.setBounds(12,168,533,60);
		add(textField3);
		descritivo = new java.awt.Label("Nome Descritivo do Projeto");
		descritivo.setBounds(12,144,191,23);
		add(descritivo);
		respons = new java.awt.Label("Responsável");
		respons.setBounds(84,240,84,11);
		add(respons);
		textField4 = new java.awt.TextField();
		textField4.setBounds(12,264,252,24);
		add(textField4);
		criacao = new java.awt.Label("Criação");
		criacao.setBounds(336,240,48,12);
		add(criacao);
		revisao = new java.awt.Label("Última Revisão");
		revisao.setBounds(456,240,96,12);
		add(revisao);
		textField5 = new java.awt.TextField();
		textField5.setBounds(312,264,96,24);
		add(textField5);
		textField6 = new java.awt.TextField();
		textField6.setBounds(444,264,102,24);
		add(textField6);
		objetivos = new java.awt.Label("Declaração de Objetivos");
		objetivos.setBounds(12,300,171,15);
		add(objetivos);
		textField7 = new java.awt.TextField();
		textField7.setBounds(12,324,531,74);
		add(textField7);
		ok_pro = new java.awt.Button();
		ok_pro.setLabel("OK");
		ok_pro.setBounds(48,408,75,20);
		ok_pro.setBackground(new Color(12632256));
		add(ok_pro);
		cancel_pro = new java.awt.Button();
		cancel_pro.setLabel("Cancelar");
		cancel_pro.setBounds(144,408,75,20);
		cancel_pro.setBackground(new Color(12632256));
		add(cancel_pro);
		button1 = new java.awt.Button();
		button1.setLabel("Aplicar");
		button1.setBounds(240,408,75,20);
		button1.setBackground(new Color(12632256));
		add(button1);
		button2 = new java.awt.Button();
		button2.setLabel("Ajuda");
		button2.setBounds(336,408,75,20);
		button2.setBackground(new Color(12632256));
		add(button2);
		setTitle("Propiedades do Projeto");
		//}}

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		ok_pro.addActionListener(lSymAction);
		cancel_pro.addActionListener(lSymAction);
		//}}
	}

	public New(String title)
	{
		this();
		setTitle(title);
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			setLocation(50, 50);
		}
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new New()).setVisible(true);
	}
	
	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();
	    
		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	java.awt.TextField textField1;
	java.awt.Label file;
	java.awt.Label abreviado;
	java.awt.TextField textField2;
	java.awt.TextField textField3;
	java.awt.Label descritivo;
	java.awt.Label respons;
	java.awt.TextField textField4;
	java.awt.Label criacao;
	java.awt.Label revisao;
	java.awt.TextField textField5;
	java.awt.TextField textField6;
	java.awt.Label objetivos;
	java.awt.TextField textField7;
	java.awt.Button ok_pro;
	java.awt.Button cancel_pro;
	java.awt.Button button1;
	java.awt.Button button2;
	//}}

	//{{DECLARE_MENUS
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == New.this)
				New_WindowClosing(event);
		}
	}
	
	void New_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);		 // hide the Frame
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == ok_pro)
				ok_pro_ActionPerformed(event);
			else if (object == cancel_pro)
				cancel_pro_ActionPerformed(event);
		}
	}


    void ok_pro_ActionPerformed(java.awt.event.ActionEvent event)
	{
		//{{CONNECTION
		// Action from New Create and show as modal
		setVisible(false);
		
		//}}
	}
	
void cancel_pro_ActionPerformed(java.awt.event.ActionEvent event)
	{
		//{{CONNECTION
		// Action from New Create and show as modal
		setVisible(false);
		
		//}}
	}
	





}
