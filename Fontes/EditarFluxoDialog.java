/*
	A basic extension of the java.awt.Dialog class
 */

import java.awt.*;
import java.net.*;
import java.io.*;

import Yourdon.*;
import symantec.itools.awt.LabelHTMLLink;
public class EditarFluxoDialog extends Dialog
{
    protected void abrir ()
    {
        textField_descricao.requestFocus();
    }
    protected void fechar ()
    {
        this.dispose();
    }
    protected Fluxo fluxo;
    protected void ok ()
    {
        fluxo.setDescricao(textField_descricao.getText());

        if (radioButton_normal.getState())
            fluxo.setTipoFluxo(Fluxo.NORMAL);
        else if (radioButton_invertido.getState())
            fluxo.setTipoFluxo(Fluxo.INVERTIDO);
        else
            fluxo.setTipoFluxo(Fluxo.BIDIRECIONAL);
    }
    public EditarFluxoDialog (Frame parent, Fluxo fluxo)
    {
        this(parent, true);

        this.fluxo = fluxo;

        this.setTitle(this.getTitle() + fluxo.getDescricao());
        textField_descricao.setText(fluxo.getDescricao());
        
        switch (fluxo.getTipoFluxo())
        {
            case Fluxo.NORMAL:
                radioButton_normal.setState(true);
                break;
            case Fluxo.INVERTIDO:
                radioButton_invertido.setState(true);
                break;
            case Fluxo.BIDIRECIONAL:
                radioButton_bidirecional.setState(true);
                break;
        }
                

    }
	public EditarFluxoDialog(Frame parent, boolean modal)
	{
		super(parent, modal);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(330,136);
		setBackground(new Color(12632256));
		label1 = new java.awt.Label("Descrição do fluxo:");
		label1.setBounds(12,12,108,13);
		add(label1);
		textField_descricao = new java.awt.TextField();
		textField_descricao.setBounds(10,30,309,20);
		add(textField_descricao);
		button_ok = new java.awt.Button();
		button_ok.setLabel("Ok");
		button_ok.setBounds(42,100,75,20);
		button_ok.setBackground(new Color(12632256));
		add(button_ok);
		button_ajuda = new java.awt.Button();
		button_ajuda.setLabel("Ajuda");
		button_ajuda.setBounds(127,100,75,20);
		button_ajuda.setBackground(new Color(12632256));
		add(button_ajuda);
		button_cancelar = new java.awt.Button();
		button_cancelar.setLabel("Cancelar");
		button_cancelar.setBounds(212,100,75,20);
		button_cancelar.setBackground(new Color(12632256));
		add(button_cancelar);
		Group1 = new CheckboxGroup();
		radioButton_normal = new java.awt.Checkbox("Normal", Group1, false);
		radioButton_normal.setBounds(10,60,90,15);
		add(radioButton_normal);
		radioButton_invertido = new java.awt.Checkbox("Invertido", Group1, false);
		radioButton_invertido.setBounds(120,60,90,15);
		add(radioButton_invertido);
		radioButton_bidirecional = new java.awt.Checkbox("Bidirecional", Group1, false);
		radioButton_bidirecional.setBounds(230,60,90,15);
		add(radioButton_bidirecional);
		setTitle("Editar fluxo: ");
		setResizable(false);
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		button_cancelar.addActionListener(lSymAction);
		button_ok.addActionListener(lSymAction);
		button_ajuda.addActionListener(lSymAction);
		SymFocus aSymFocus = new SymFocus();
		textField_descricao.addFocusListener(aSymFocus);
		//}}
	}
	
	public void addNotify()
	{
  	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();

		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;


	public EditarFluxoDialog(Frame parent, String title, boolean modal)
	{
		this(parent, modal);
		setTitle(title);
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			Rectangle bounds = getParent().getBounds();
			Rectangle abounds = getBounds();
	
			setLocation(bounds.x + (bounds.width - abounds.width)/ 2,
				 bounds.y + (bounds.height - abounds.height)/2);
		}
		super.setVisible(b);
	}

	//{{DECLARE_CONTROLS
	java.awt.Label label1;
	java.awt.TextField textField_descricao;
	java.awt.Button button_ok;
	java.awt.Button button_ajuda;
	java.awt.Button button_cancelar;
	java.awt.Checkbox radioButton_normal;
	CheckboxGroup Group1;
	java.awt.Checkbox radioButton_invertido;
	java.awt.Checkbox radioButton_bidirecional;
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowOpened(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == EditarFluxoDialog.this)
				EditarFluxoDialog_WindowOpened(event);
		}

		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == EditarFluxoDialog.this)
				Dialog1_WindowClosing(event);
		}
	}
	
	void Dialog1_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == button_cancelar)
				buttonCancelar_ActionPerformed(event);
			else if (object == button_ok)
				buttonOk_ActionPerformed(event);
			else if (object == button_ajuda)
				buttonAjuda_ActionPerformed(event);
		}
	}

	void buttonCancelar_ActionPerformed(java.awt.event.ActionEvent event)
	{
        this.fechar();
	}

	void buttonOk_ActionPerformed(java.awt.event.ActionEvent event)
	{
		this.ok();
		this.fechar();
	}

	void EditarFluxoDialog_WindowOpened(java.awt.event.WindowEvent event)
	{
        this.abrir();
	}

	void buttonAjuda_ActionPerformed(java.awt.event.ActionEvent event)
	{
        try
        {
            Runtime.getRuntime().exec("winhelp PowerCase.hlp");
        }
        catch (java.io.IOException e) {}
	}

	class SymFocus extends java.awt.event.FocusAdapter
	{
		public void focusLost(java.awt.event.FocusEvent event)
		{
			Object object = event.getSource();
			if (object == textField_descricao)
				textFieldDescricao_FocusLost(event);
		}

		public void focusGained(java.awt.event.FocusEvent event)
		{
			Object object = event.getSource();
			if (object == textField_descricao)
				textFieldDescricao_FocusGained(event);
		}
	}

	void textFieldDescricao_FocusGained(java.awt.event.FocusEvent event)
	{
        textField_descricao.selectAll();
	}

	void textFieldDescricao_FocusLost(java.awt.event.FocusEvent event)
	{
        textField_descricao.select(0,0);
	}
}
