/*
	A basic extension of the java.awt.Window class
 */

import java.awt.*;

import symantec.itools.awt.ImagePanel;
import symantec.itools.multimedia.ImageViewer;
import symantec.itools.awt.ImageButton;
import symantec.itools.awt.ImageHTMLLink;
public class SplashWindow extends Window
{
	public SplashWindow(Frame parent)
	{
		super(parent);
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setSize(521,236);
		imageViewer1 = new symantec.itools.multimedia.ImageViewer();
		try {
			imageViewer1.setImageURL(symantec.itools.net.RelativeURL.getURL("logo.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		catch(java.beans.PropertyVetoException e) { }
		imageViewer1.setBounds(0,0,520,235);
		add(imageViewer1);
		//}}
	
		//{{REGISTER_LISTENERS
		SymMouse aSymMouse = new SymMouse();
		imageViewer1.addMouseListener(aSymMouse);
		//}}
	}

	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();
	    
		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	symantec.itools.multimedia.ImageViewer imageViewer1;
	//}}
	public void setVisible(boolean b)
	{
	    if (b)
	    {
	        if (getParent().isShowing())
	        {
        		Rectangle bounds = getParent().bounds();
        		Rectangle abounds = bounds();

        		move(bounds.x + (bounds.width - abounds.width)/ 2,
        			 bounds.y + (bounds.height - abounds.height)/2);
        			 
        	    this.toFront();
        	}
        	else
        	    this.setLocation(130,140);
	    }

		super.setVisible(b);
	}

	class SymMouse extends java.awt.event.MouseAdapter
	{
		public void mouseClicked(java.awt.event.MouseEvent event)
		{
			Object object = event.getSource();
			if (object == imageViewer1)
				imageViewer1_mouseClicked(event);
		}
	}

	void imageViewer1_mouseClicked(java.awt.event.MouseEvent event)
	{
	    if (!getParent().isEnabled()) getParent().setEnabled(true);
        this.dispose();
	}
}
