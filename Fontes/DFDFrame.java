/*
	A basic extension of the java.awt.Frame class
 */

import java.awt.*;

import symantec.itools.awt.util.ToolBarPanel;
import symantec.itools.awt.ImageButton;
public class DFDFrame extends Frame
{
	public DFDFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(new BorderLayout(0,0));
		setSize(430,270);
		setBackground(new Color(12632256));
		toolBarPanel1 = new symantec.itools.awt.util.ToolBarPanel();
		toolBarPanel1.setBounds(0,0,430,46);
		add("North", toolBarPanel1);
		selecionarButton = new symantec.itools.awt.ImageButton();
		try {
			selecionarButton.setImageURL(symantec.itools.net.RelativeURL.getURL("selecionar.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		catch(java.beans.PropertyVetoException e) { }
		try {
			selecionarButton.setShowFocus(false);
		}
		catch(java.beans.PropertyVetoException e) { }
		selecionarButton.setBounds(0,0,44,38);
		toolBarPanel1.add(selecionarButton);
		scrollPane1 = new java.awt.ScrollPane(ScrollPane.SCROLLBARS_AS_NEEDED);
		scrollPane1.setBounds(0,46,430,224);
		add("Center", scrollPane1);
		setTitle("Untitled");
		//}}

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		//}}
	}

	public DFDFrame(String title)
	{
		this();
		setTitle(title);
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			setLocation(50, 50);
		}
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new DFDFrame()).setVisible(true);
	}
	
	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();
	    
		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	symantec.itools.awt.util.ToolBarPanel toolBarPanel1;
	symantec.itools.awt.ImageButton selecionarButton;
	java.awt.ScrollPane scrollPane1;
	//}}

	//{{DECLARE_MENUS
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == DFDFrame.this)
				Frame1_WindowClosing(event);
		}
	}
	
	void Frame1_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);		 // hide the Frame
	}
}
