/*
	A basic extension of the java.awt.Dialog class
 */

import java.awt.*;
import Yourdon.*;

public class SelecionarEntidadeDialog extends Dialog
{
    protected Projeto projeto;
    protected void excluir ()
    {
        int         indice;
        Entidade    entidade;

        indice = list.getSelectedIndex();
        if (indice == -1) return;
        entidade = this.lista.getEntidade(indice);
        this.lista.remover(indice);
        this.projeto.dfd0.excluirReferenciaElemento(entidade);
        this.projeto.contexto.excluirReferenciaElemento(entidade);

        this.atualizar();
        list.select(0);
    }
    protected void inserir ()
    {
	    int indice;

	    indice = list.getItemCount();

        this.lista.adicionar("Nova entidade");
        this.atualizar();

        list.select(indice);
        this.editar();
    }
    protected void editar ()
    {
        int         indice;
        Entidade    entidade;

        indice = list.getSelectedIndex();
        if (indice == -1) return;

        entidade = this.lista.getEntidade(indice);

        (new EditarEntidadeDialog(this.parentFrame, entidade)).setVisible(true);

        this.atualizar();
        list.select(indice);
    }
    protected Frame parentFrame;
    public Entidade selecionada;
    protected void atualizar()
    {
        Entidade    entidade;

        list.removeAll();

        entidade = lista.getPrimeiro();
        while (entidade != null)
        {
            list.add(entidade.getDescricao());
            entidade = lista.getProximo();
        }
        list.select(0);

    }
    public SelecionarEntidadeDialog (Frame parent, Projeto projeto)
    {
        this(parent, true);
        this.projeto = projeto;
        this.lista = projeto.entidades;
        this.parentFrame = parent;
        this.atualizar();
    }
    protected ListaEntidades lista;
	public SelecionarEntidadeDialog(Frame parent, boolean modal)
	{
		super(parent, modal);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(344,247);
		setBackground(new Color(12632256));
		list = new java.awt.List(4);
		add(list);
		list.setBounds(5,5,245,235);
		list.setBackground(new Color(12632256));
		selecionarButton = new java.awt.Button();
		selecionarButton.setLabel("Adicionar");
		selecionarButton.setBounds(260,5,75,20);
		selecionarButton.setBackground(new Color(12632256));
		add(selecionarButton);
		inserirButton = new java.awt.Button();
		inserirButton.setLabel("Nova...");
		inserirButton.setBounds(260,40,75,20);
		inserirButton.setBackground(new Color(12632256));
		add(inserirButton);
		editarButton = new java.awt.Button();
		editarButton.setLabel("Editar...");
		editarButton.setBounds(260,65,75,20);
		editarButton.setBackground(new Color(12632256));
		add(editarButton);
		excluirButton = new java.awt.Button();
		excluirButton.setLabel("Excluir");
		excluirButton.setBounds(260,90,75,20);
		excluirButton.setBackground(new Color(12632256));
		add(excluirButton);
		ajudaButton = new java.awt.Button();
		ajudaButton.setLabel("Ajuda");
		ajudaButton.setBounds(260,125,75,20);
		ajudaButton.setBackground(new Color(12632256));
		add(ajudaButton);
		cancelarButton = new java.awt.Button();
		cancelarButton.setLabel("Cancelar");
		cancelarButton.setBounds(260,220,75,20);
		cancelarButton.setBackground(new Color(12632256));
		add(cancelarButton);
		setTitle("Adicionar entidade");
		setResizable(false);
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		selecionarButton.addActionListener(lSymAction);
		cancelarButton.addActionListener(lSymAction);
		inserirButton.addActionListener(lSymAction);
		editarButton.addActionListener(lSymAction);
		excluirButton.addActionListener(lSymAction);
		SymMouse aSymMouse = new SymMouse();
		list.addMouseListener(aSymMouse);
		ajudaButton.addActionListener(lSymAction);
		//}}
	}
	
	public void addNotify()
	{
  	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();

		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;


	public SelecionarEntidadeDialog(Frame parent, String title, boolean modal)
	{
		this(parent, modal);
		setTitle(title);
	}

    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			Rectangle bounds = getParent().getBounds();
			Rectangle abounds = getBounds();
	
			setLocation(bounds.x + (bounds.width - abounds.width)/ 2,
				 bounds.y + (bounds.height - abounds.height)/2);
		}
		super.setVisible(b);
	}

	//{{DECLARE_CONTROLS
	java.awt.List list;
	java.awt.Button selecionarButton;
	java.awt.Button inserirButton;
	java.awt.Button editarButton;
	java.awt.Button excluirButton;
	java.awt.Button ajudaButton;
	java.awt.Button cancelarButton;
	//}}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == SelecionarEntidadeDialog.this)
				Dialog1_WindowClosing(event);
		}
	}
	
	void Dialog1_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);
	}

	void selecionarButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
	    this.selecionar();
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == selecionarButton)
				selecionarButton_ActionPerformed(event);
			else if (object == cancelarButton)
				cancelarButton_ActionPerformed(event);
			else if (object == inserirButton)
				inserirButton_ActionPerformed(event);
			else if (object == editarButton)
				editarButton_ActionPerformed(event);
			else if (object == excluirButton)
				excluirButton_ActionPerformed(event);
			else if (object == ajudaButton)
				ajudaButton_ActionPerformed(event);
		}
	}

    protected void selecionar ()
    {
	    int indice;

	    indice = list.getSelectedIndex();
	    if (indice == -1) return;

        this.selecionada = lista.getEntidade(indice);
        fechar();
    }

	protected void fechar()
	{
	    this.dispose();
	}

	void cancelarButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
        this.fechar();
	}
	void inserirButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
        this.inserir();
	}

	void editarButton_ActionPerformed(java.awt.event.ActionEvent event)
    {
        this.editar();
	}

	void excluirButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
        this.excluir();
	}

	class SymMouse extends java.awt.event.MouseAdapter
	{
		public void mouseClicked(java.awt.event.MouseEvent event)
		{
			Object object = event.getSource();
			if (object == list)
				list_MouseClicked(event);
		}
	}

	void list_MouseClicked(java.awt.event.MouseEvent event)
	{
        if (event.getClickCount() > 1) this.selecionar();
	}

	void ajudaButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
        try
        {
            Runtime.getRuntime().exec("winhelp PowerCase.hlp");
        }
        catch (java.io.IOException e) {}
	}
}
